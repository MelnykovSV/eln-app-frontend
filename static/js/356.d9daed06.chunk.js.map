{"version":3,"file":"static/js/356.d9daed06.chunk.js","mappings":"qLAIA,E,OAFkBA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,Q,qECiC5B,EAxBkB,WAChB,IAAMC,GAAWC,EAAAA,EAAAA,KAIXC,GAAgBC,EAAAA,EAAAA,GAAeC,EAAAA,IACrCC,GAA8BC,EAAAA,EAAAA,MAAtBC,EAAQF,EAARE,SAAUC,EAAOH,EAAPG,QAWlB,OATAC,EAAAA,EAAAA,YAAU,WACJP,EAAcQ,MAAQH,EACxBP,GAASW,EAAAA,EAAAA,IAA0BH,IAEnCR,GAASY,EAAAA,EAAAA,IAAkB,CAAEL,SAAAA,EAAUC,QAAAA,IAG3C,GAAG,KAGDK,EAAAA,EAAAA,KAACC,EAAS,CAAAC,UACRF,EAAAA,EAAAA,KAACG,EAAAA,GAAK,KAGZ,C","sources":["pages/StagePage/StagePage.styled.tsx","pages/StagePage/StagePage.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nconst Container = styled.div``;\r\n\r\nexport default Container;\r\n","import Container from \"./StagePage.styled\";\r\nimport { Stage } from \"../../modules\";\r\nimport { useAppSelector, useAppDispatch } from \"../../redux/hooks\";\r\nimport {\r\n  getCurrentScheme,\r\n  initialUpdateCurrentStage,\r\n} from \"../../redux/schemes/schemesSlice\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { getSchemeAndStage } from \"../../redux/schemes/operations\";\r\n\r\nconst StagePage = () => {\r\n  const dispatch = useAppDispatch();\r\n  // const currentStage = useAppSelector(getCurrentStage);\r\n  // const [_yield] = useState(currentStage._yield);\r\n  // const [_id] = useState(currentStage._id);\r\n  const currentScheme = useAppSelector(getCurrentScheme);\r\n  const { schemeId, stageId } = useParams() as any;\r\n\r\n  useEffect(() => {\r\n    if (currentScheme._id === schemeId) {\r\n      dispatch(initialUpdateCurrentStage(stageId));\r\n    } else {\r\n      dispatch(getSchemeAndStage({ schemeId, stageId }));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Stage />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default StagePage;\r\n"],"names":["styled","div","_templateObject","_taggedTemplateLiteral","dispatch","useAppDispatch","currentScheme","useAppSelector","getCurrentScheme","_ref","useParams","schemeId","stageId","useEffect","_id","initialUpdateCurrentStage","getSchemeAndStage","_jsx","Container","children","Stage"],"sourceRoot":""}