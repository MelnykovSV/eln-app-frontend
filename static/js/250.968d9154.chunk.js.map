{"version":3,"file":"static/js/250.968d9154.chunk.js","mappings":"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","sources":["pages/Schemes/Schemes.styled.tsx","pages/Schemes/Schemes.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nconst Container = styled.div`\r\n  .utility-panel {\r\n    padding: 20px;\r\n    gap: 30px;\r\n    @media screen and (min-width: 1280px) {\r\n      display: flex;\r\n      justify-content: center;\r\n    }\r\n    .select-container {\r\n      border: 1px solid black;\r\n      padding: 10px;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n\r\n    .sorting-container {\r\n      border: 1px solid black;\r\n      padding: 5px;\r\n      padding-left: 20px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      .radio-buttons-container {\r\n      }\r\n      .arrows-container {\r\n        display: flex;\r\n        flex-direction: column;\r\n      }\r\n    }\r\n  }\r\n  .schemes-preview-container {\r\n    display: grid;\r\n\r\n    position: relative;\r\n\r\n    grid-template-columns: repeat(1, 202px);\r\n\r\n    @media screen and (min-width: 768px) {\r\n      grid-template-columns: repeat(3, 202px);\r\n    }\r\n    @media screen and (min-width: 1280px) {\r\n      grid-template-columns: repeat(6, 202px);\r\n    }\r\n\r\n    justify-content: space-between;\r\n    margin: 0 auto;\r\n    gap: 5px;\r\n  }\r\n`;\r\n\r\nexport default Container;\r\n","import Container from \"./Schemes.styled\";\r\nimport { ReactionSchemePreview } from \"../../components\";\r\nimport { CustomSelect } from \"../../components\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport { SortingRadioGroup } from \"../../components\";\r\nimport { IReactionPreviewData } from \"../../types\";\r\nimport dayjs from \"dayjs\";\r\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\r\nimport { SearchTextInput } from \"../../ui\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAppSelector, useAppDispatch } from \"../../redux/hooks\";\r\nimport { getSchemePreviews } from \"../../redux/schemes/schemesSlice\";\r\nimport { getSchemes } from \"../../redux/schemes/operations\";\r\ndayjs.extend(customParseFormat);\r\n\r\nconst Schemes = () => {\r\n  const dispatch = useAppDispatch();\r\n  useEffect(() => {\r\n    dispatch(getSchemes());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const realSchemes = useAppSelector(getSchemePreviews);\r\n  const [currentSchemesType, setCurrentSchemesType] = useState(\"all\");\r\n  const [sortingParam, setSortingParam] = useState(\"createdAt\");\r\n  const [sortingDireaction, setSortingDireaction] = useState(\"up\");\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const searchHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  const schemesTypeSelectHandler = (event: SelectChangeEvent) => {\r\n    setCurrentSchemesType(event.target.value as string);\r\n  };\r\n\r\n  const sortingParamChangeHandler = (\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setSortingParam(e.target.value);\r\n  };\r\n\r\n  const sortingDireactionChangeHandler = (\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setSortingDireaction(e.target.value);\r\n  };\r\n\r\n  const formatOutput = (schemePreviews: IReactionPreviewData[]) => {\r\n    let filteredData = [];\r\n    if (currentSchemesType !== \"all\") {\r\n      filteredData = schemePreviews.filter(\r\n        (item) => item.status === currentSchemesType\r\n      );\r\n    } else {\r\n      filteredData = [...schemePreviews];\r\n    }\r\n\r\n    const sortedData = filteredData.sort(\r\n      (a: IReactionPreviewData, b: IReactionPreviewData) => {\r\n        if (sortingParam === \"price\" || sortingParam === \"mass\") {\r\n          return sortingDireaction === \"up\"\r\n            ? a[sortingParam] - b[sortingParam]\r\n            : b[sortingParam] - a[sortingParam];\r\n        }\r\n\r\n        if (\r\n          sortingParam === \"createdAt\" ||\r\n          sortingParam === \"updatedAt\" ||\r\n          sortingParam === \"deadline\"\r\n        ) {\r\n          return sortingDireaction === \"up\"\r\n            ? dayjs(a[sortingParam], \"DD.MM.YYYY\").valueOf() -\r\n                dayjs(b[sortingParam], \"DD.MM.YYYY\").valueOf()\r\n            : dayjs(b[sortingParam], \"DD.MM.YYYY\").valueOf() -\r\n                dayjs(a[sortingParam], \"DD.MM.YYYY\").valueOf();\r\n        }\r\n        return 0;\r\n      }\r\n    );\r\n    if (searchValue) {\r\n      const dataAfterSearch = sortedData.filter(\r\n        (item) => item.targetCompound === searchValue\r\n      );\r\n      return dataAfterSearch;\r\n    }\r\n\r\n    return sortedData;\r\n  };\r\n\r\n  const [dataToShow, setDataToShow] = useState(formatOutput(realSchemes));\r\n\r\n  useEffect(() => {\r\n    setDataToShow(formatOutput(realSchemes));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [\r\n    currentSchemesType,\r\n    sortingParam,\r\n    sortingDireaction,\r\n    searchValue,\r\n    realSchemes,\r\n  ]);\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"utility-panel container\">\r\n        <CustomSelect\r\n          currentSchemesType={currentSchemesType}\r\n          schemesTypeSelectHandler={schemesTypeSelectHandler}\r\n        />\r\n        <SortingRadioGroup\r\n          sortingParam={sortingParam}\r\n          sortingParamChangeHandler={sortingParamChangeHandler}\r\n          sortingDireaction={sortingDireaction}\r\n          sortingDireactionChangeHandler={sortingDireactionChangeHandler}\r\n        />\r\n        <SearchTextInput label=\"Enter SMILES\" changeHandler={searchHandler} />\r\n        <Link to=\"/newScheme\">New Scheme</Link>\r\n      </div>\r\n\r\n      <div className=\"schemes-preview-container container\">\r\n        {dataToShow.map((item) => (\r\n          <ReactionSchemePreview schemePreviewData={item} key={nanoid()} />\r\n        ))}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Schemes;\r\n"],"names":["styled","div","_templateObject","_taggedTemplateLiteral","dayjs","customParseFormat","dispatch","useAppDispatch","useEffect","getSchemes","realSchemes","useAppSelector","getSchemePreviews","_useState","useState","_useState2","_slicedToArray","currentSchemesType","setCurrentSchemesType","_useState3","_useState4","sortingParam","setSortingParam","_useState5","_useState6","sortingDireaction","setSortingDireaction","_useState7","_useState8","searchValue","setSearchValue","formatOutput","schemePreviews","sortedData","filter","item","status","_toConsumableArray","sort","a","b","valueOf","targetCompound","_useState9","_useState10","dataToShow","setDataToShow","_jsxs","Container","children","className","_jsx","CustomSelect","schemesTypeSelectHandler","event","target","value","SortingRadioGroup","sortingParamChangeHandler","e","sortingDireactionChangeHandler","SearchTextInput","label","changeHandler","Link","to","map","ReactionSchemePreview","schemePreviewData","nanoid"],"sourceRoot":""}