{"version":3,"file":"static/js/187.a2e0d644.chunk.js","mappings":"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","sources":["helpers/calculateSchemeYieldCoefficients.ts","pages/SingleSchemePage/SingleSchemePage.styled.tsx","pages/SingleSchemePage/SingleSchemePage.tsx"],"sourcesContent":["export interface ISchemeData {\r\n  startingMaterial: string | null;\r\n  targetCompound: string | null;\r\n  mass: number | null;\r\n  totalYieldCoefficient?: number;\r\n  stages: {\r\n    _id?: string | null;\r\n    solvent: string | null;\r\n    temp: number | null;\r\n    time: string | null;\r\n    _yield: number | null;\r\n    methodic: string | null;\r\n    product: string | null;\r\n    yieldCoefficient?: number;\r\n  }[];\r\n}\r\n\r\nexport const calculateSchemeYieldCoefficients = (obj: ISchemeData) => {\r\n  // if (!obj.stages.length) {\r\n  //   return obj;\r\n  // }\r\n  const arr = [...obj.stages];\r\n\r\n  if (arr.some((item) => item._yield === null)) {\r\n    return obj;\r\n  } else {\r\n    arr.reverse();\r\n    const coefficients = arr.reduce((acc: number[], item) => {\r\n      if (acc.length) {\r\n        return [...acc, (item._yield! / 100) * acc[acc.length - 1]];\r\n      } else {\r\n        return [...acc, item._yield! / 100];\r\n      }\r\n    }, []);\r\n\r\n    arr.reverse();\r\n    coefficients.reverse();\r\n\r\n    const result = arr.map((item: any, i: number) => ({\r\n      ...item,\r\n      yieldCoefficient: coefficients[i + 1] || 1,\r\n    }));\r\n\r\n    return {\r\n      ...obj,\r\n      stages: result,\r\n      totalYieldCoefficient: coefficients[0],\r\n    };\r\n  }\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nconst Container = styled.div``;\r\n\r\nexport default Container;\r\n","import Container from \"./SingleSchemePage.styled\";\r\nimport { Scheme } from \"../../modules\";\r\n// import { currentScheme } from \"../../testData\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ReagentList } from \"../../modules\";\r\nimport { calc } from \"../../helpers/molMass\";\r\nimport axios from \"axios\";\r\nimport { CustomTabPanel } from \"../../components\";\r\nimport { useAppSelector } from \"../../redux/hooks\";\r\nimport { useAppDispatch } from \"../../redux/hooks\";\r\nimport { useParams } from \"react-router\";\r\nimport { getSingleScheme } from \"../../redux/schemes/operations\";\r\nimport { calculateSchemeYieldCoefficients } from \"../../helpers/calculateSchemeYieldCoefficients\";\r\nimport { smilesToMolecularFormula } from \"../../helpers/chemistryHelpers\";\r\nimport {\r\n  getCurrentScheme\r\n} from \"../../redux/schemes/schemesSlice\";\r\nimport { smilesToMolWeight } from \"../../helpers/chemistryHelpers\";\r\nimport { IUpdatedCurrentScheme } from \"../../types/redux\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport { updateSchemeStatusAndSave } from \"../../redux/schemes/operations\";\r\n\r\nfunction a11yProps(index: number) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst SingleSchemePage = () => {\r\n  const { schemeId } = useParams();\r\n\r\n  const dispatch = useAppDispatch();\r\n  const currentScheme = useAppSelector(getCurrentScheme);\r\n  const updatedSchemeData = calculateSchemeYieldCoefficients(\r\n    currentScheme\r\n  ) as IUpdatedCurrentScheme;\r\n\r\n  const reagentsList = [\r\n    {\r\n      smiles: currentScheme.startingMaterial,\r\n      mass: Number(\r\n        (\r\n          (smilesToMolWeight(updatedSchemeData.startingMaterial || \"\") *\r\n            ((updatedSchemeData.mass || 0) /\r\n              smilesToMolWeight(updatedSchemeData.targetCompound || \"\"))) /\r\n          updatedSchemeData.totalYieldCoefficient\r\n        ).toFixed(2)\r\n      ),\r\n      // mass: 100\r\n    },\r\n  ];\r\n\r\n  currentScheme.stages.forEach((item, i) => {\r\n    const approvedAttempt = item.attempts.find((attempt) => attempt.isOk);\r\n    if (i === 0) {\r\n      approvedAttempt?.reagents.forEach((reagent) => {\r\n        return reagentsList.push({\r\n          smiles: reagent.smiles,\r\n          mass: Number(\r\n            (\r\n              ((smilesToMolWeight(reagent.smiles || \"\") *\r\n                ((updatedSchemeData.mass || 0) /\r\n                  smilesToMolWeight(updatedSchemeData.targetCompound || \"\"))) /\r\n                updatedSchemeData.totalYieldCoefficient) *\r\n              (reagent.equivalents || 0)\r\n            ).toFixed(2)\r\n          ),\r\n        });\r\n      });\r\n    } else {\r\n      approvedAttempt?.reagents.forEach((reagent) => {\r\n        return reagentsList.push({\r\n          smiles: reagent.smiles,\r\n          mass: Number(\r\n            (\r\n              ((smilesToMolWeight(reagent.smiles || \"\") *\r\n                ((updatedSchemeData.mass || 0) /\r\n                  smilesToMolWeight(updatedSchemeData.targetCompound || \"\"))) /\r\n                updatedSchemeData.stages[i - 1].yieldCoefficient) *\r\n              (reagent.equivalents || 0)\r\n            ).toFixed(2)\r\n          ),\r\n        });\r\n      });\r\n    }\r\n  });\r\n\r\n  const [value, setValue] = useState(0);\r\n\r\n  const [reagentsListData, setReagentsListData] = useState([] as any);\r\n  useEffect(() => {\r\n    if (schemeId && schemeId !== currentScheme._id) {\r\n      dispatch(getSingleScheme(schemeId));\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [schemeId]);\r\n\r\n  useEffect(() => {\r\n    const arr1 = reagentsList.map(async (item) => {\r\n      if (item.smiles !== null) {\r\n        const formula = smilesToMolecularFormula(item.smiles);\r\n        const molWeight = calc(formula) as unknown as string;\r\n        try {\r\n          const response = await axios.get(\r\n            `https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/smiles/${item.smiles}/property/IUPACName/JSON`\r\n          );\r\n          return {\r\n            smiles: item.smiles,\r\n            mass: item.mass,\r\n            formula,\r\n            molWeight,\r\n            compoundName: response.data.PropertyTable.Properties[0].IUPACName,\r\n          };\r\n        } catch (e) {\r\n          return {\r\n            smiles: item.smiles,\r\n            mass: item.mass,\r\n            formula,\r\n            molWeight,\r\n            compoundName: \"\",\r\n          };\r\n        }\r\n      }\r\n    });\r\n\r\n    Promise.all(arr1).then((resolvedArr) => {\r\n      const filteredArray = resolvedArr.filter((item) => item !== undefined);\r\n      setReagentsListData(filteredArray);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentScheme]);\r\n\r\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const synthesisStatusChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    dispatch(\r\n      updateSchemeStatusAndSave({\r\n        schemeId: currentScheme._id,\r\n        status: e.target.value,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container className=\"container\">\r\n      <div>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"basic tabs example\">\r\n          <Tab label=\"Scheme\" {...a11yProps(0)} />\r\n          <Tab label=\"Reagents calculation\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </div>\r\n      <CustomTabPanel value={value} index={0}>\r\n        <RadioGroup\r\n          onChange={synthesisStatusChange}\r\n          value={currentScheme.status}\r\n          row\r\n          aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n          name=\"row-radio-buttons-group\"\r\n          className=\"radio-buttons-container\">\r\n          <FormControlLabel value=\"active\" control={<Radio />} label=\"Active\" />\r\n          <FormControlLabel\r\n            value=\"success\"\r\n            control={<Radio />}\r\n            label=\"Success\"\r\n          />\r\n          <FormControlLabel value=\"fail\" control={<Radio />} label=\"Fail\" />\r\n          <FormControlLabel value=\"chosen\" control={<Radio />} label=\"Chosen\" />\r\n        </RadioGroup>\r\n        <Scheme schemeData={updatedSchemeData} />\r\n      </CustomTabPanel>\r\n      <CustomTabPanel value={value} index={1}>\r\n        <ReagentList reagents={reagentsListData} />\r\n      </CustomTabPanel>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SingleSchemePage;\r\n"],"names":["calculateSchemeYieldCoefficients","obj","arr","_toConsumableArray","stages","some","item","_yield","reverse","coefficients","reduce","acc","length","concat","result","map","i","_objectSpread","yieldCoefficient","totalYieldCoefficient","styled","div","_templateObject","_taggedTemplateLiteral","a11yProps","index","id","schemeId","useParams","dispatch","useAppDispatch","currentScheme","useAppSelector","getCurrentScheme","updatedSchemeData","reagentsList","smiles","startingMaterial","mass","Number","smilesToMolWeight","targetCompound","toFixed","forEach","approvedAttempt","attempts","find","attempt","isOk","reagents","reagent","push","equivalents","_useState","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","reagentsListData","setReagentsListData","useEffect","_id","getSingleScheme","arr1","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formula","molWeight","response","wrap","_context","prev","next","smilesToMolecularFormula","calc","axios","get","sent","abrupt","compoundName","data","PropertyTable","Properties","IUPACName","t0","stop","_x","apply","arguments","Promise","all","then","resolvedArr","filteredArray","filter","undefined","_jsxs","Container","className","children","_jsx","Tabs","onChange","event","newValue","Tab","label","CustomTabPanel","RadioGroup","e","updateSchemeStatusAndSave","status","target","row","name","FormControlLabel","control","Radio","Scheme","schemeData","ReagentList"],"sourceRoot":""}